#!/bin/sh

# debug.sh is a utility script to help debug McSync on machines running OS X.
# It starts McSync and attaches cgdb to it. Further, it executes tail -f data/log
# for real-time debugging of the McSync log. Running the script will result in
# three new terminal windows with adjusted dimension for convenience.
# It has to stay in the root McSync folder to function properly.

# Important: This script will kill all processes matching "mcsync"

# Look for prerequisites
command -v /usr/bin/osascript >/dev/null 2>&1 || { echo "This script runs on OS X only." >&2; exit 1; }
command -v cgdb >/dev/null 2>&1 || { echo "This script requires *cgdb* and it was not found on your machine." >&2; exit 1; }

# Build McSync, abort if not successful
./compile -b development

if [ $? -ne 0 ]; then
    exit 1
fi

# Find the McSync root path (the folder this script is in)
DIR="$( cd -P "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Kill all processes related to McSync
MCSYNCPIDS=`ps aux | grep mcsync | grep -v root | grep -v grep | awk '{print $2}'`
if [ $? -eq "0" ]; then
for i in $MCSYNCPIDS; do kill -9 $i; done
fi

# Create a new terminal window and starts tail for real-time logging.

# Important: Deletes log contents left over from previous runs.
/usr/bin/osascript <<EOF
    tell application "Terminal"
        do script "cd $DIR; cat /dev/null > data/log; tail -f data/log;"
    end tell
EOF

MACHINE_ARCHITECTURE=`(cc -v 2>&1 | grep Target: | sed 's/.*: *//')`

# Create a new terminal window and start McSync in it
/usr/bin/osascript <<EOF
    tell application "Terminal"
        do script "cd $DIR; ./bin/mcsync.$MACHINE_ARCHITECTURE;"
    end tell
EOF

# Wait for McSync to start
MCSYNCPIDS=
while [ -z $MCSYNCPIDS ]; do
    MCSYNCPIDS=`ps aux | grep mcsync | grep -v root | grep -v grep | awk '{print $2}'`
    sleep 0.01
done

# Start cgdb and tell it to attach itself to the running McSync instance
/usr/bin/osascript <<EOF
    tell application "Terminal"
        do script "cd $DIR; cgdb attach $MCSYNCPIDS;"
    end tell
EOF

# Resize the newly created windows and arrange them for convenience
/usr/bin/osascript <<EOF
    tell application "Finder"
        set screenSize to (bounds of window of desktop)
    end

    set width to item 3 of screenSize
    set height to item 4 of screenSize

    set halfwidth to width/2
    set halfheight to height/2

    tell application "Terminal"
        activate
        set position of window 1 to {0, 0}
        set size of window 1 to {halfwidth, height}
        set position of window 2 to {halfwidth+5, 0}
        set size of window 2 to {halfwidth, halfheight}
        set position of window 3 to {halfwidth+5, halfheight}
        set position of window 4 to {0, halfheight}
    end tell
EOF
