#!/bin/sh

# Important: Do not move this file out of the McSync root folder.

# mcsync.sh helps to start McSync in slave mode when contacted over the network.
# It changes into the root directory of McSync before invoking the corresponding
# binary for the machine architecture. If said binary does not exists, or if it
# is older than any source file, it will be built automatically. This allows McSync
# the use of relative paths (, e.g. ./data/log, ) and also helps installing McSync
# on remote machines. The installation process consists of sending McSyncs root
# directory to a fresh machine and invoking this script. It can also be used lo-
# cally as combined "compile and start McSync" command.

# Change into McSync root directory (the path of this script file)
cd "$( cd "$( dirname "$0" )" && pwd )"

MACHINE_ARCHITECTURE=`(cc -v 2>&1 | grep Target: | sed 's/.*: *//')`

# Find the most recently modified source or header file
LATEST_FILE=`find .  \( -name "*.c" -o -name "*.h" \) -type f -exec stat -f "%m %N" {} \; \
            | sort -n | tail -1 | cut -f2- -d" "`

# Check if the binary file exists for our architecture and whether it is older
# than the latest source.
if [ ./bin/mcsync.$MACHINE_ARCHITECTURE -ot $LATEST_FILE ]; then
    ./compile -b production
elif [ ./bin/mcsync.$MACHINE_ARCHITECTURE -nt $LATEST_FILE ]; then
    read -p "Executable has been modified or touched since the last build. Rebuild? (y/n)?"
    if [ $REPLY == "y" ]; then
        ./compile -b production
    fi
else
    echo "Executable looks up-to-date."
fi

bin/mcsync.$MACHINE_ARCHITECTURE $*